(* it is assumed that any non-breaking whitespace and comments have been removed from the input *)
start = statements;

statements = [ statement, { breaking_whitespace, statement } ];
statement = assignment | expression;

assignment = identifier, equal_sign, expression;

expression = 
    generic_expression
    | numeric_expression
    | boolean_expression
    | string_literal;
(* TODO: add function calls, etc... *)
generic_expression = identifier;
numeric_expression = 
    numeric_expression, ("+", "-", "*", "/", "%"), numeric_expression
    | "(", numeric_expression, ")"
    | numeric_literal
    | generic_expression;
boolean_expression =
    boolean_expression, ("||", "&&", "!"), boolean_expression
    | "(", boolean_expression, ")"
    | boolean_literal
    | generic_expression;

(* tokens, not handeled by parser *)
numeric_literal = { digit }, ".", { digit };
boolean_literal = "true" | "false";
string_literal = "\"", ( letter | digit ), "\"";
identifier = letter, { letter | digit };
equal_sign = "=";
breaking_whitespace = "\n", { "\n" };

(* utility rules *)
digit = "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9";
letter = "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j"
    | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u"
    | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F"
    | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q"
    | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z";

(* IMPORT expression.ebnf *)
(* IMPORT token.ebnf *)

literal = boolean_literal;
negation = "!", boolean_expression;
parenthesized = "(", boolean_expression, ")";
booleanless_expression =
    ambiguously_typed_expression
    | numeric_expression
    | string_literal
    | invocation
    | chain
    | symbol;
boolean_operand =
    negation
    | parenthesized
    | literal
    | booleanless_expression;
(* adds an assertion that the expression resolves to a boolean value at runtime *)
type_asserted_expression = booleanless_expression;
type_asserted_boolean_operand =
    boolean_operand
    | type_asserted_expression;
binary_boolean_expression =
    boolean_operand, {
        ( "==" | "!=" | ">" | ">=" | "<" | "<=" | "&&" | "||" | "^" ),
        boolean_operand,
    };
(* EXPORT *)
boolean_expression = binary_boolean_expression | type_asserted_boolean_operand;

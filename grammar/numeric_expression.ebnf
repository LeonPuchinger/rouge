(* IMPORT expression.ebnf*)

(* EXPORT *)
numeric_expression = sum;

sum = product { ( "+" | "-" ), product };
product = factor { ( "*" | "/" ), factor };
factor =
    unary_numeric_expression
    | parenthesized_numeric_expression
    | invocation
    | symbol
    | literal;
unary_numeric_expression = ( "+" | "-" ), numeric_expression;
parenthesized_numeric_expression = "(", numeric_expression, ")";

(* token, not handeled by parser *)
numeric_literal = { digit }, [ ".", { digit } ];

(* utility rule *)
digit = "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9";

(* IMPORT expression.ebnf *)
(* IMPORT token.ebnf *)
(* IMPORT util.ebnf *)

literal = numeric_literal;
unary = ( "+" | "-" ), numeric_expression;
parenthesized = "(", numeric_expression, ")";
ambiguously_typed_expression = invocation | symbol;
factor =
    unary
    | parenthesized
    | ambiguously_typed_expression
    | literal;
product = factor { ( "*" | "/" ), factor };
sum = product { ( "+" | "-" ), product };

(* EXPORT *)
numeric_expression = sum;

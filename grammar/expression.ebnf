(* IMPORT numeric_expression.ebnf *)
(* IMPORT boolean_expression.ebnf *)
(* IMPORT token.ebnf *)
(* IMPORT util.ebnf *)

symbol = identifier;

(* multiple constructs (e.g. functions or structs) can be invocated/initialized with the same syntax *)
invocation = identifier, "(", expressions, ")";
method_invocation = ".", invocation;
property_access = ".", identifier;
chain = expression, { ".", ( method_invocation, property_access ) };

(* EXPORT *)
expression =
    ambiguously_typed_expression
    | numeric_expression
    | boolean_expression
    | string_literal
    | invocation
    | chain
    | symbol;

(* EXPORT *)
expressions = [ expression, { ",",  expression } ];

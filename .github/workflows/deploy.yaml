name: Deploy Module to GitHub Packages

on:
  push:
    tags:
      - "v*"

permissions:
  contents: read
  packages: write

jobs:
  build:
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    container:
      image: node:lts

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Survey Environment
        run: |
          ls -la
          git config --global --add safe.directory $(pwd)
          git describe --tags

      - name: Check whether commit is tagged with semantic versioning
        run: |
          if [[ $(git describe --tags) =~ ^v[0-9]+\.[0-9]+\.[0-9]+(-[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$ ]]; then
            echo "Commit is tagged with semantic versioning, proceeding with the workflow."
          else
            echo "Commit is not tagged with semantic versioning (e.g. "v1.0.0"), skipping the workflow."
            exit 1
          fi
        shell: bash

      - name: Set package version
        run: |
          # allow command failure to be able to catch exit codes
          set +e
          # update package version
          latest_tag=$(git describe --tags)
          package_version=${latest_tag#v}
          npm version --no-git-tag-version ${package_version}
          exit_code=$?
          # re-allow failure
          set -e
          # setting version to implicit default (0.0.0) is allowed (error code 123)
          if [[ $exit_code -ne 123 ]]; then
            exit $exit_code
          fi
        shell: bash

      - name: Fetch dependencies
        run: npm install

      - name: Build module
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: ./dist

      # Create a temporary `.npmrc` file with credentials from the CI before publishing.
      - name: Publish module to GH Packages
        run: |
          : > .npmrc
          echo "@${{ github.repository_owner }}:registry=https://npm.pkg.github.com" >> .npmrc
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}" >> .npmrc
          npm publish

  publish-npm:
    name: Publish to NPM
    needs: build
    runs-on: ubuntu-latest
    container:
      image: node:latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: dist

      - name: Publish module
        run: |
          : > .npmrc
          echo "registry=https://registry.npmjs.org/" >> .npmrc
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_PUBLISH_ACCESS_TOKEN }}" >> .npmrc
          npm publish
